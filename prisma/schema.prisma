datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
  output   = "../src/generated/zod"
}

enum Gender {
  M
  F
  Unisex
  Empty // représente ""
}

enum Season {
  mid_season // Mi-saison
  hot // Chaud
  cold // Froid
  Empty // représente ""
}

enum Category {
  jacket // Veste
  socks // Chaussettes
  accessories // Accessoires
  pajamas // Pyjama
  set // Ensemble
  dress // Robe / Combishort
  coat // Blouson / Manteau
  tshirt_short // T-shirt MC (Manches Courtes)
  tshirt_long // T-shirt ML (Manches Longues)
  sweatshirt // Sweat
  pants // Pantalon/Bas
  bodysuit // Bodies
  Empty // représente ""
}

enum Size {
  zero_months // 0 mois
  one_month // 1 mois
  three_months // 3 mois
  six_months // 6 mois
  nine_months // 9 mois
  twelve_months // 12 mois
  eighteen_months // 18 mois
  twenty_four_months // 24 mois
  two_years // 2 ans
  three_years // 3 ans
  four_years // 4 ans
  five_years // 5 ans
  six_years // 6 ans
  Empty // représente ""
}

enum Status {
  finished // terminé
  in_progress // en cours
  collected // collecté
  pending // en attente
  sold // vendu
  reserved // réservé
  available // disponible
}

enum State {
  new // Neuf
  very_good // Très bon état
  good // Bon état
  fair // Usage correct
  donation // Don pur
}

enum Brand {
  jacadi
  petit_bateau
  sergent_major
  zara
  hm
  kiabi
  no_name
  bonpoint
  tartine_et_chocolat
  bonton
  okaidi
  dpam
  tape_a_loeil
  vertbaudet
  catimini
  ca
  tex_carrefour
  in_extenso_auchan
  gemo
  zeeman
  primark
  lidl
  monoprix
  la_redoute
  orchestra
  grain_de_ble
  boutchou_monoprix
  ikks
  absorba
  natalys
  Empty
}

model User {
  id          String    @id @default(cuid())
  clerkUserId String    @unique
  email       String?   @unique
  createdAt   DateTime  @default(now())
  products    Product[]
}

model Product {
  id          String   @id @default(cuid())
  userId      String
  name        String
  description String?
  price       Float    @default(0)
  gender      Gender   @default(Empty)
  category    Category @default(Empty)
  size        Size     @default(Empty)
  season      Season   @default(Empty)
  status      Status   @default(collected)
  state       State    @default(new)
  brand       Brand    @default(Empty)
  photo       String // URL publique
  photoKey    String // chemin/clé dans le bucket
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}
