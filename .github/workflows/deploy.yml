name: CI/CD - build & deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ github.sha }}
            type=raw,value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/production/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on VPS via SSH (kubectl set image)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -euo pipefail
            export KUBECONFIG=/home/${USER}/.kube/config
            # Met à jour l'image avec le tag = SHA du commit
            kubectl -n minitroc-laundry set image deploy/minitroc-laundry-web minitroc-laundry=ghcr.io/${{ github.repository }}:${{ github.sha }}
            # Vérifie le rollout et échoue si ça ne passe pas
            kubectl -n minitroc-laundry rollout status deploy/minitroc-laundry-web --timeout=500s
            # Affiche l'image effective
            kubectl -n minitroc-laundry get deploy/minitroc-laundry-web -o=jsonpath='{.spec.template.spec.containers[0].image}'; echo